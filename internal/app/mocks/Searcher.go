// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	context "context"

	finder "bitbucket.org/johnmackenzie91/itunes-artwork-proxy-api/internal/finder"
	mock "github.com/stretchr/testify/mock"
)

// Searcher is an autogenerated mock type for the Searcher type
type Searcher struct {
	mock.Mock
}

// Search provides a mock function with given fields: ctx, term, country, entity
func (_m *Searcher) Search(ctx context.Context, term string, country string, entity string) (finder.SearchResponse, error) {
	ret := _m.Called(ctx, term, country, entity)

	var r0 finder.SearchResponse
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string) finder.SearchResponse); ok {
		r0 = rf(ctx, term, country, entity)
	} else {
		r0 = ret.Get(0).(finder.SearchResponse)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, string, string) error); ok {
		r1 = rf(ctx, term, country, entity)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
